name: CI
run-name: CI

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'

  pull_request:
    branches:
      - main

jobs:
  job_lint:
    name: Lint

    runs-on: ubuntu-latest

    steps:
      - name: Checkout, Setup Node.js v20.x and Install dependencies
        uses: manferlo81/action-checkout-node-install@v0
        with:
          node-version: 20.x

      - name: Lint
        run: npm run lint

  job_test_and_build:
    strategy:
      matrix:
        os:
          - name: Ubuntu
            machine: ubuntu-latest
          - name: Windows
            machine: windows-latest
          - name: macOS
            machine: macos-latest
        node-version:
          - 18.x
          - 20.x
          - 21.x
          - 22.x

    name: Test and Build ( ${{ matrix.os.name }}, Node.js v${{ matrix.node-version }} )

    needs: job_lint
    runs-on: ${{ matrix.os.machine }}

    steps:
      - name: Checkout, Setup Node.js v${{ matrix.node-version }} and Install dependencies
        uses: manferlo81/action-checkout-node-install@v0
        with:
          node-version: ${{ matrix.node-version }}

      - name: Run Tests
        run: npm test
        env:
          NO_COVERAGE: true

      - name: Build
        run: npm run build

  job_upload_coverage:
    name: Upload coverage to Codecov

    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref_type == 'branch' }}
    needs: job_test_and_build

    steps:
      - name: Checkout, Setup Node.js v${{ env.NODE_VERSION }} and Install dependencies
        uses: manferlo81/action-checkout-node-install@v0
        with:
          node-version: ${{ env.NODE_VERSION }}
        env:
          NODE_VERSION: 20.x

      - name: Run Tests
        run: npm test
        env:
          CI: true

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage/coverage-final.json

  job_create_release:
    name: Create GitHub Release

    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref_type == 'tag' }}
    needs: job_test_and_build

    permissions:
      contents: write

    steps:
      - name: Checkout, Setup Node.js v${{ env.NODE_VERSION }} and Install dependencies
        uses: manferlo81/action-checkout-node-install@v0
        with:
          node-version: ${{ env.NODE_VERSION }}
        env:
          NODE_VERSION: 20.x

      - name: Build
        run: npm run build

      - name: Create Tarball
        run: npm pack

      - name:
        uses: manferlo81/action-auto-release@v0
        with:
          files: romanint-*.tgz

  job_publish_to_npm:
    name: Publish package to npm

    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref_type == 'tag' }}
    needs: job_test_and_build

    steps:
      - name: Checkout, Setup Node.js v${{ env.NODE_VERSION }} and Install dependencies
        uses: manferlo81/action-checkout-node-install@v0
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: https://registry.npmjs.org/
        env:
          NODE_VERSION: 20.x

      - name: Build
        run: npm run build

      - name: Publish package
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
